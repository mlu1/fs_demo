var john = {
    name: 'John',
    age: 45
};
console.log(john.name);
var foo = 'bar';
function add(a, b) {
    return a + b;
}
var obj = {
    bar: 10,
};
obj['bar'] = 10;
obj['foo'] = 29;
add(1, 3);
var x = 0;
loop: while (x < 10) {
    x++;
}
function lesson9() {
    return;
    {
        x: true;
    }
}
function log(msg, flag) {
    var MEANING_OF_LIFE = 42;
    if (msg.length > 4) {
        return null;
    }
    console.log(msg);
}
function compare(arg) {
    switch (typeof arg) {
        case 'number':
        case 'string':
            console.log('Fallthrough case');
            break;
        default:
            console.log('Default case');
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVVBLElBQU0sSUFBSSxHQUFXO0lBQ2pCLElBQUksRUFBQyxNQUFNO0lBQ1gsR0FBRyxFQUFDLEVBQUU7Q0FDVCxDQUFBO0FBRUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7QUFHdEIsSUFBSSxHQUFHLEdBQVUsS0FBSyxDQUFBO0FBRXRCLFNBQVMsR0FBRyxDQUFFLENBQVEsRUFBQyxDQUFRO0lBQzNCLE9BQU8sQ0FBQyxHQUFDLENBQUMsQ0FBQTtBQUNkLENBQUM7QUFFRCxJQUFNLEdBQUcsR0FBTztJQUNaLEdBQUcsRUFBQyxFQUFFO0NBQ1QsQ0FBQTtBQUVELEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLENBQUE7QUFDZixHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFBO0FBRWYsR0FBRyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQTtBQUVSLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtBQUVULElBQUksRUFBRSxPQUFNLENBQUMsR0FBQyxFQUFFLEVBQUMsQ0FBQztJQUNkLENBQUMsRUFBRSxDQUFBO0FBQ1AsQ0FBQztBQUNELFNBQVMsT0FBTztJQUNaLE9BQU87SUFDUCxDQUFDO1FBQ0csQ0FBQyxFQUFDLElBQUksQ0FBQTtJQUNWLENBQUM7QUFDTCxDQUFDO0FBRUQsU0FBUyxHQUFHLENBQUMsR0FBVSxFQUFDLElBQVk7SUFDaEMsSUFBTSxlQUFlLEdBQUcsRUFBRSxDQUFBO0lBQzFCLElBQUcsR0FBRyxDQUFDLE1BQU0sR0FBQyxDQUFDLEVBQUMsQ0FBQztRQUNiLE9BQU8sSUFBSSxDQUFBO0lBQ2YsQ0FBQztJQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUE7QUFDcEIsQ0FBQztBQUVELFNBQVMsT0FBTyxDQUFDLEdBQU87SUFFcEIsUUFBTyxPQUFPLEdBQUcsRUFBQyxDQUFDO1FBQ2YsS0FBSyxRQUFRLENBQUM7UUFDZCxLQUFLLFFBQVE7WUFDVCxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLENBQUE7WUFDL0IsTUFBSztRQUNUO1lBQ0ksT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQTtJQUNuQyxDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImludGVyZmFjZSBPYmp7XHJcbiAgICBiYXI6bnVtYmVyLFxyXG4gICAgZm9vPzpudW1iZXJcclxufVxyXG5cclxuaW50ZXJmYWNlIFBlcnNvbntcclxuICAgIG5hbWU6c3RyaW5nLFxyXG4gICAgYWdlOm51bWJlcixcclxufVxyXG5cclxuY29uc3Qgam9obiA6UGVyc29uID0ge1xyXG4gICAgbmFtZTonSm9obicsXHJcbiAgICBhZ2U6NDVcclxufVxyXG5cclxuY29uc29sZS5sb2coam9obi5uYW1lKVxyXG5cclxuXHJcbmxldCBmb286c3RyaW5nID0gJ2JhcidcclxuXHJcbmZ1bmN0aW9uIGFkZCAoYTpudW1iZXIsYjpudW1iZXIpOm51bWJlcntcclxuICAgIHJldHVybiBhK2JcclxufVxyXG5cclxuY29uc3Qgb2JqOk9iaiA9IHtcclxuICAgIGJhcjoxMCxcclxufVxyXG5cclxub2JqWydiYXInXSA9IDEwXHJcbm9ialsnZm9vJ10gPSAyOVxyXG5cclxuYWRkKDEsMylcclxuXHJcbmxldCB4ID0gMFxyXG5cclxubG9vcCA6d2hpbGUoeDwxMCl7XHJcbiAgICB4KytcclxufVxyXG5mdW5jdGlvbiBsZXNzb245KCl7XHJcbiAgICByZXR1cm47XHJcbiAgICB7XHJcbiAgICAgICAgeDp0cnVlXHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGxvZyhtc2c6c3RyaW5nLGZsYWc6Ym9vbGVhbil7XHJcbiAgICBjb25zdCBNRUFOSU5HX09GX0xJRkUgPSA0MlxyXG4gICAgaWYobXNnLmxlbmd0aD40KXtcclxuICAgICAgICByZXR1cm4gbnVsbFxyXG4gICAgfVxyXG4gICAgY29uc29sZS5sb2cobXNnKVxyXG59XHJcblxyXG5mdW5jdGlvbiBjb21wYXJlKGFyZzphbnkpe1xyXG4gICAgXHJcbiAgICBzd2l0Y2godHlwZW9mIGFyZyl7XHJcbiAgICAgICAgY2FzZSAnbnVtYmVyJzpcclxuICAgICAgICBjYXNlICdzdHJpbmcnOlxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnRmFsbHRocm91Z2ggY2FzZScpXHJcbiAgICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0RlZmF1bHQgY2FzZScpXHJcbiAgICB9XHJcbn1cclxuIl19